#!/usr/bin/env just --justfile

set dotenv-load 
set positional-arguments 

TIMESTAMP := `date +"%T"`
DATE := `date +%Y-%m-%d`

@_default: 
  just --justfile {{justfile()}} --list --list-heading '' --list-prefix 'git '

@_check_env_variables:
  #!/usr/bin/bash
  OWNER_REPO=$(git remote -v | awk -F'[:/.]' '/fetch/{print $(NF-2)"/"$(NF-1)}')
  [ -z $REPO ] && just --justfile {{justfile_directory()}}/dotenv update REPO $OWNER_REPO git

set_protected_branch:
  #!/bin/bash

  # Variables
  TOKEN="YOUR_GITHUB_TOKEN"
  # OWNER="REPO_OWNER"
  # REPO="REPO_NAME"
  BRANCH="BRANCH_NAME"

  # API Call
  curl -X PUT \
    -H "Authorization: token $TOKEN" \
    -H "Accept: application/vnd.github.v3+json" \
    https://api.github.com/repos/$REPO/branches/$BRANCH/protection \
    -d '{
    "required_status_checks": {
      "strict": true,
      "contexts": ["continuous-integration"]
    },
    "enforce_admins": true,
    "required_pull_request_reviews": {
      "dismiss_stale_reviews": true
    },
    "restrictions": {
      "users": ["octocat"],
      "teams": ["justice-league"]
    }
  }'

# git_commit:
commit *args='':
  #!/bin/bash
  git commit -m "$1"

# git_cherrypick.sh
cherrypick *args='':
  #!/bin/bash
  SOURCE_BRANCH=$1
  TARGET_BRANCH=$2
  LAST_COMMIT=$(git log $SOURCE_BRANCH -n 1 --pretty=format:"%H")
  git checkout $TARGET_BRANCH
  git cherry-pick $LAST_COMMIT

# git_check_remote_branch repo branch
check_remote_branch *args='':
  git fetch --prune
  git ls-remote --heads ${REPO} ${BRANCH} | grep ${BRANCH} >/dev/null
  if [ "$?" == "1" ] ; then echo "Branch doesn't exist"; exit; fi
